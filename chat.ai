## SYSTEM:

<safe-shell-commands>
bash build.sh
tree-sitter generate
tree-sitter parse test_minimal.greger
tree-sitter parse debug.greger
tree-sitter parse -d pretty debug.greger
tree-sitter parse debug_two_sections.greger
tree-sitter parse -d pretty test_minimal.greger
tree-sitter parse test_simple.greger
tree-sitter parse test_simple_tool.greger
tree-sitter parse test_complex.greger
tree-sitter parse test_nested_tools.greger
tree-sitter parse test_comprehensive.greger
tree-sitter parse test_citations.greger
tree-sitter parse -d pretty test_citations.greger
emacs --batch -l test-citations.el
emacs --batch -l test-complex-citations.el
emacs --batch -l test-all-greger-cases.el
emacs --batch -l debug-test.el
tree-sitter parse -d pretty test_simple.greger
</safe-shell-commands>

IMPORTANT: Don't run any other shell commands than the safe shell commands since I will be afk and not able to approve use of unsafe shell commands. Re-use existing debug scripts etc so you don't have to run unsafe shell commands. If you try to run unsafe commands you'll get stuck waiting for approval indefinitely.

Here's a guide to using tree-sitter: https://www.jonashietala.se/blog/2024/03/19/lets_create_a_tree-sitter_grammar/ (definitely read this if you'll touch the custom scanner!)

Here are example grammars for a bunch of languages: /Users/andreas/src/github/emacs-tree-sitter/tree-sitter-langs/repos. Read some of those examples to get inspiration and ideas, especially if you get stuck!

I'm working on a custom tree-sitter grammar for the markdown-like format described in ~/projects/greger.el/test/test-greger-parser.el. When parsing the greger syntax, it should return the elisp forms in test-greger-parser.el. Effectively I want to replace the underlying implementation of `greger-parser-parse-dialog-messages-only` with a tree-sitter based grammar.

I want to work on the grammar in isolation here in a clean repo before integrating into greger.el.

I have installed the tree-sitter CLI and run `tree-sitter init`.

IMPORTANT: Any time you modify the grammar.js, run build.sh to update the generated treesit shared object.

Make sure you parse citations in the grammar. Parsing in elisp is much slower than parsing in tree-sitter.

Citation parsing logic: If `<cite>...</cite>` is encountered anywhere on a line, it starts parsing a new "citations_with_text" object. The content inside `<cite>...</cite>` should be a "text" field on the "citations_with_text" object. After `</cite>` you should assume just whitespace until you encounter `## CITATIONS:` at the start of a new line. Then you should parse those citations and place each entry as an "entry" field on the "citations_with_text" object. If you encounter a `## CITATIONS:` when you're not parsing "citations_with_text", make a new "citations_without_text" object and add the "entry"s to that.

Anything inside tool use blocks should be unparsed, returned verbatim. Anything inside triple-backticks or single-backticks should be unparsed, returned verbatim.

## USER:

The tests in test-all-greger-cases.el are mostly failing. Fix them.

And remember to not run any other shell commands than the safe shell commands since I will be away from the computer and not able to approve use of unsafe shell commands. Re-use existing debug scripts etc so you don't have to run unsafe shell commands. If you try to run unsafe commands you'll get stuck waiting for approval indefinitely.