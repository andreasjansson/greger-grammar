#!/bin/bash

# Validate greger-grammar setup
set -e

echo "üîß Validating greger-grammar setup..."

# Check if tree-sitter CLI is available
if ! command -v tree-sitter &> /dev/null; then
    echo "‚ùå tree-sitter CLI not found. Install with: npm install -g tree-sitter-cli"
    exit 1
fi

echo "‚úÖ tree-sitter CLI found"

# Validate grammar.js syntax
echo "üîç Validating grammar.js syntax..."
node -c grammar.js
echo "‚úÖ grammar.js syntax is valid"

# Generate parser
echo "üèóÔ∏è  Generating parser..."
tree-sitter generate
echo "‚úÖ Parser generated successfully"

# Run tests
echo "üß™ Running test suite..."
tree-sitter test
echo "‚úÖ All tests passed"

# Test basic parsing
echo "üìù Testing basic parsing..."
cat > test_validation.txt << 'EOF'
# SYSTEM

You are a helpful assistant.

<eval>test content</eval>

<safe-shell-commands>
echo hello
<eval bash>echo world</eval>
</safe-shell-commands>

# USER

<eval>user eval</eval>

Hello!

# ASSISTANT

<eval>this should be text</eval>

Hi there!
EOF

tree-sitter parse test_validation.txt > /dev/null
echo "‚úÖ Basic parsing works"

# Verify eval functionality
if tree-sitter parse test_validation.txt | grep -q "eval_start_tag"; then
    echo "‚úÖ Eval functionality working"
else
    echo "‚ùå Eval functionality not working"
    exit 1
fi

# Cleanup
rm test_validation.txt

echo ""
echo "üéâ All validations passed! greger-grammar is ready for use."
echo ""
echo "Next steps:"
echo "  - Push to GitHub to trigger CI"
echo "  - Use 'npm test' to run Node.js binding tests"
echo "  - Use 'tree-sitter playground' to test interactively"
